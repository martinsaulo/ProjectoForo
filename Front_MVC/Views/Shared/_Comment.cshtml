@model CommentDto

@{
    int postAuthorId = ViewBag.PostAuthorId;
    int postId = ViewBag.PostId;

    bool isPostAuthor = false , isCommentAuthor = false;

    int? id = Context.Session.GetInt32("SESSION");

    if (id != null )
    {
        if (id == postAuthorId) isPostAuthor = true;

        if (id == Model.Author.Id) isCommentAuthor = true;

    }

    var isEdit = new Dictionary<string, string> { { "edit", "true" } };
}


<div class="card mb-2 container">
    <div class="card-body mr-2">
        <h5 class="card-title text-primary">@Model.Author.Nickname</h5>
        <p class="card-text">@Model.Description</p>
        <div class="d-flex justify-content-between">
            <div>
                <span class="text-success">Likes: @Model.LikeCount</span>

                <a class="btn btn-sm btn-success" asp-controller="Home" asp-action="LikeComment" 
                asp-route-commentId=@Model.Id
                asp-route-postId=@postId
                asp-route-userId=@id
                asp-route-isDislike="false">
                    <i class="nf nf-fa-heard_o"></i>
                </a>

                <a class="btn btn-sm btn-danger" asp-controller="Home" asp-action="LikeComment"
                asp-route-commentId=@Model.Id
                asp-route-postId=@postId
                asp-route-userId=@id
                asp-route-isDislike="true">
                    <i class="nf nf-md-heart_broken">
                </i></a>

                <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#replyModal" onclick="ReplyComment('@Model.Id')">
                    <i class="nf nf-md-comment_text_outline"></i>
                </button>
                
                @if (isCommentAuthor)
                {

                    <a class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#editModal" onclick="EditComment('@Model.Id')">
                        <i class="nf nf-fa-pen_to_square text-white"></i>
                    </a>


                    <a class="btn btn-sm btn-danger" asp-controller="Home" asp-action="DeleteComment"
                    asp-route-commentId=@Model.Id
                    asp-route-postId=@postId
                    asp-route-userId=@id>
                        <i class="nf nf-fa-trash_can"></i>
                    </a>
                }

                @if (isPostAuthor)
                {
                    <a class="btn btn-sm btn-warning text-white" asp-controller="Home" asp-action="PinComment"
                    asp-route-postId=@postId
                    asp-route-commentId=@Model.Id
                    asp-route-userId=@id>
                        <i class="nf nf-oct-pin"></i>
                    </a>

                }
            </div>
            
            @if (Model.isEdited)
            {
                <span class="text-danger">(Editado)</span>
            }
            <span class="text-muted">Publicado: @Model.CreateAt.ToString("dd/MM/yyyy HH:mm")</span>
        </div>

    </div>
    @if (Model.Replies != null && Model.Replies.Any())
    {
        <ul class="list-group ms-4">

            @foreach (var reply in Model.Replies)
            {
                <!-- Renderizar respuestas recursivamente -->
                if (reply.isDeleted)
                {
                    @await Html.PartialAsync("_DeletedComment", reply)
                }
                else
                {
                    @await Html.PartialAsync("_Comment", reply)
                }
            }

        </ul>
    }
</div>


