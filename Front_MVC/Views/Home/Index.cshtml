@model ICollection<PostDto>
@{

    ViewData["Title"] = "Inicio";
    string? pageString = Context.Request.Query["page"];

    int pag = 0;
    Int32.TryParse(pageString, out pag);

    pag = (pag == 0) ? 1 : pag;
}

<script>
    function Order() {
        var orderBy = document.getElementById('orderBy').value;
        var pageSize = document.getElementById('pageSize').value;
        var page = '@pag';

        var url = '@Url.Action("Index")' + '?page=' + page + '&orderBy=' + orderBy + '&pageSize=' + pageSize;
        window.location.href = url; 
    }

    function ChangePage(pag){
        var orderBy = document.getElementById('orderBy').value;
        var pageSize = document.getElementById('pageSize').value;

        var url = '@Url.Action("Index")' + '?page=' + pag + '&orderBy=' + orderBy + '&pageSize=' + pageSize;
        window.location.href = url;
    }
</script>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" >
        @TempData["ErrorMessage"]
    </div>
}

<div class="container mt-5">

    <h1 class="mb-4">Últimos Posteos</h1>

    <div class="row align-content-between mb-2">

        
        <div class="col-6 d-flex justify-content-start">
            <a class="btn btn-primary margin-bottom mx-1" asp-controller="Home" asp-action="NewPost">
                <i class="nf nf-fa-plus"></i>
            </a>
        </div>

        <div class="col-6 d-flex justify-content-end">

            <a class="btn margin-bottom btn-primary mx-1" onclick="Order();">
                Ordenar
            </a>


            <select class="form-control mx-1 margin-bottom" id="orderBy">
                <option value="date">Fecha</option>
                <option value="likecount">Likes</option>
            </select>


            <select class="form-control mx-1 margin-bottom" id="pageSize">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
            </select>

        </div>
        
    </div>
    


    @if(Model.Count() == 0)
    {
        <p>Aun no se ha publicado ningun posteo.</p>
    }

    @foreach (var post in Model)
    {
        <div class="card mb-3 shadow-sm post-card">
            <div class="card-body" onclick="window.location.href = '@Url.Action("PostDetails", "Home", new { postId = post.Id })';">
                <h2 class="card-title">@post.Title</h2>
                <p class="card-subtitle text-primary">@post.Author.Nickname</p>
                @if(post.Description.Length > 750)
                {
                    <p class="card-text">@post.Description.Substring(0,750) ...</p>
                }
                else
                {
                    <p class="card-text">@post.Description</p>
                }
                
                <div class="d-flex justify-content-between">
                    <span class="text-success">Likes: @post.LikeCount</span>
                    @if (post.isEdited)
                    {
                        <span class="text-danger">(Editado)</span>
                    }
                    <span class="text-muted">Publicado: @post.CreateAt.ToString("dd/MM/yyyy HH:mm")</span>
                </div>
            </div>
        </div>
    }


    <ul class="pagination justify-content-center">
        @for (var i = 1; i <= 10; i++)
        {
            <li class="page-item @(pag == i ? "active" : "")">
                <a class="page-link" onclick="ChangePage(@i)">@i</a>
            </li>
        }
    </ul>

</div>

